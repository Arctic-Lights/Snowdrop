{"name":"Tundra","tagline":"A powerful API suited for young programmers in growth.               :)","body":"<center>![](https://cloud.githubusercontent.com/assets/13122095/10650737/10e099a2-7819-11e5-9d0c-5ff4846b1c0d.png)</center>\r\n\r\n\r\n# Tundra\r\nA powerful API suited for young programmers in growth. :)\r\n\r\n<!-- Include a link to the Arctic Lights website (arcticlights.ca) -->\r\n\r\n\r\n<!-- Include a link to the Tundra website (tundra.arcticlights.ca) -->\r\nVisit the [Tundra Website](http://arctic-lights.github.io/Tundra)\r\n\r\n<!-- Include some quick widget stats, like downloads and views -->\r\n\r\n### Why?\r\n\r\nThe art of programming has now developed to be an essential skill in the technological age. The ability to create and foster innovative programs to enhance lives, perform complex operations to ease operations, and in overall, to simplify chores.\r\n\r\nIt’s well known that languages are close to impossible to learn at the beginning. This is because programming is, quite literally, speaking in another language, with such unique semantics that would just about be wrong in the everyday languages in which we speak.\r\n\r\nLearning a language is often tiresome, and can be incredibly challenging for someone with no prior programming experience. Language structure and semantics can be nearly impossible to master, even for those with experience. Many languages have been developers for these first-timers. However, these languages often lack in capability, and the transition to more mainstream languages can still prove challenging. The switch from relatively high-level operations, to seemingly low-level operations makes for a confusing, and tiring learning experience.\r\n\r\nBecause of this, many young learners often lose interest, or don’t learn. Frameworks and languages often lack in thorough documentation, that is simple enough for the next door neighbour to understand. Further, there is generally little, to absolutely no examples in which to model, and develop. People are then faced with seemingly endless information, which is rendered useless due to the lack of usage guidance.\r\n\r\nThe Tundra Application Programmers Interface, or API, attempts to resolve many of these issues by providing easy to use classes and interfaces that blend in with the standard libraries to help build upon the learning experience. By wrapping common, lengthy operations into simple and concise methods, the API allows young developers to build upon moderately complex programs to help stimulate an interest in learning the structure and semantics of the language. Once these fundamentals are developed, it is hoped that these young developers will have the knowledge to build upon their skills, and learn more thorough structures and features that the language provides in itself and in its entirety.\r\n\r\nOf course, the biggest issue lies now in how to stimulate interest in the nature of programming itself. Tundra attempts to do exactly that: stimulate interest in the field by making things easier and simpler, all working to build the programming skills that one needs for the future.\r\n\r\n![XKCD Standards](http://imgs.xkcd.com/comics/standards.png)\r\n\r\n*sigh*... That’s besides the point. The goal of Tundra is not to create an API that competes with already existing ones (in fact, we use other external APIs as well), but to help cater to those who are trying to learn: arguably the most fragile group that exists. Because of this, we’re able to distinguish ourselves, our target audience forces us to better the API in concise ways, and provides us with a large incentive that many projects just seem to ignore: the documentation.\r\n\r\nOr even just:\r\n\r\n    doAThing() -> void\r\n\r\n      Well… It does ya know. \r\n\r\n\r\nThis is arguably the greatest asset that the Tundra API has itself: the documentation that comes with the API. The docs, or the “dictionary” of the language provides vast amounts of information at a developer’s fingertips. The issue of lacking documentation is so great, that places such as Stack Overflow are now looking to create complete, community-curated sites about documentation for languages, and many popular programming frameworks. The documentation of Tundra focuses on simplicity and clarity, as well as another thing nearly unheard of in API documentation: examples. Classes and methods in the API are well documented on both what they do, and when and where to use them.\r\n\r\nAll aspects of Tundra effectively make it advantageous and unique: the quality of the project and all aspects of it make it attractive to all developers, no matter what their application or experience. \r\n\r\n### Features:\r\n\r\n- <strike>We've got features, but how should we display it? (Well, technically there is no features since there's no code in this repo yet :/</strike>\r\n\r\nTundra provides many extensions to the standard Java library, and introduces many higher-level classes to ease the work and extra code required to do the same operation using the slight lower-level interfaces that the standard Java library provides. Here are some of the things that Tundra has:\r\n\r\n- Many AWT (Abstract Window Toolkit) and Swing extensions.\r\n- User Notifications (Support for native notifications on OS X as well)\r\n- Support for Native operations (these are separate packages, and come with documentation)\r\n- IO utilities\r\n- File utilities\r\n- Basic utilities\r\n- High-level interfaces for local servers and sockets; high-level web interfaces\r\n\r\n### Documentation:\r\n\r\nAs noted above, we're proud of the project that we have. This GitHub repository hosts the code that powers the API. If you're looking for the documentation, you can go to the project website, [here]. The documentation comes with rich examples to help enhance usage of the API effectively. You can also find tutorials if you wish to learn the language with the assistance of the high-level features of the API.\r\n\r\n- [Project Documentation]\r\n- [Language and Project Tutorials]\r\n\r\n### License:\r\n\r\n- We're still trying to choose a license. Wanting to help us choose? Visit Open Source SE and help us out in [this] post!\r\n\r\n### Installation:\r\n\r\n- Installation instructions can be found in the project website. In a nutshell, you can find the `.jar` files located for downoad on the project website, and include them in the classpath of your project. More information on the website, at `/installation`.\r\n\r\n### Contribute!\r\n\r\n- Still trying to figure out contribution policies. :)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}